{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar _API_baseUrl, _API_headers;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.API = void 0;\n\nconst axios_1 = __importDefault(require(\"axios\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst PARSE_ERROR_MSG = \"the api returned an error and there was a fatal client side error parsing that error msg\";\n\nclass API {\n  constructor(baseUrl, apiKey) {\n    _API_baseUrl.set(this, void 0);\n\n    _API_headers.set(this, void 0);\n\n    __classPrivateFieldSet(this, _API_baseUrl, baseUrl, \"f\");\n\n    __classPrivateFieldSet(this, _API_headers, {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"x-api-key\": apiKey\n    }, \"f\");\n  }\n\n  getUrl(path) {\n    return `${__classPrivateFieldGet(this, _API_baseUrl, \"f\")}/${path}`;\n  }\n\n  createQuery(query) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let result;\n\n      try {\n        result = yield axios_1.default.post(this.getUrl(\"queries\"), {\n          sql: query.sql,\n          ttl_minutes: query.ttlMinutes,\n          cached: query.cached\n        }, {\n          headers: __classPrivateFieldGet(this, _API_headers, \"f\")\n        });\n      } catch (err) {\n        let errData = err;\n        result = errData.response;\n\n        if (!result) {\n          throw new errors_1.UnexpectedSDKError(PARSE_ERROR_MSG);\n        }\n      }\n\n      let data;\n\n      if (result.status >= 200 && result.status < 300) {\n        data = result.data;\n      } else {\n        data = null;\n      }\n\n      return {\n        statusCode: result.status,\n        statusMsg: result.statusText,\n        errorMsg: data === null || data === void 0 ? void 0 : data.errors,\n        data\n      };\n    });\n  }\n\n  getQueryResult(queryID, pageNumber, pageSize) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let result;\n\n      try {\n        result = yield axios_1.default.get(this.getUrl(`queries/${queryID}`), {\n          params: {\n            pageNumber: pageNumber,\n            pageSize: pageSize\n          },\n          method: \"GET\",\n          headers: __classPrivateFieldGet(this, _API_headers, \"f\")\n        });\n      } catch (err) {\n        let errData = err;\n        result = errData.response;\n\n        if (!result) {\n          throw new errors_1.UnexpectedSDKError(PARSE_ERROR_MSG);\n        }\n      }\n\n      let data;\n\n      if (result.status >= 200 && result.status < 300) {\n        data = result.data;\n      } else {\n        data = null;\n      }\n\n      return {\n        statusCode: result.status,\n        statusMsg: result.statusText,\n        errorMsg: data === null || data === void 0 ? void 0 : data.errors,\n        data\n      };\n    });\n  }\n\n}\n\nexports.API = API;\n_API_baseUrl = new WeakMap(), _API_headers = new WeakMap(); //# sourceMappingURL=api.js.map","map":null,"metadata":{},"sourceType":"script"}