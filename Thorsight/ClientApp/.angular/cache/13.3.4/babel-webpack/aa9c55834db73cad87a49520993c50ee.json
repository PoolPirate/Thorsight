{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Flipside = void 0;\n\nconst api_1 = require(\"./api\");\n\nconst integrations_1 = require(\"./integrations\");\n\nconst API_BASE_URL = \"https://api.flipsidecrypto.com\";\n\nclass Flipside {\n  constructor(apiKey, apiBaseUrl = API_BASE_URL) {\n    // Setup API, which will be passed to integrations\n    const api = new api_1.API(apiBaseUrl, apiKey); // declare integrations on Flipside client\n\n    this.query = new integrations_1.QueryIntegration(api);\n  }\n\n}\n\nexports.Flipside = Flipside;\n\n__exportStar(require(\"./types\"), exports);\n\n__exportStar(require(\"./errors\"), exports); //# sourceMappingURL=flipside.js.map","map":null,"metadata":{},"sourceType":"script"}