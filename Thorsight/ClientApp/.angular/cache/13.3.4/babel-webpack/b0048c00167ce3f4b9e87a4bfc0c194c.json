{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { takeUntil } from 'rxjs';\nimport { BaseComponent } from '../../shared/component/base.component';\nimport { ViewCacheService } from './services/view-cache.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./services/view-cache.service\";\nimport * as i3 from \"../../core/services/queryservice\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"./components/navbar/nav.component\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/common\";\n\nfunction ViewComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const position_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", position_r2.poolName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", position_r2.poolName, \" \");\n  }\n}\n\nexport let ViewComponent = /*#__PURE__*/(() => {\n  class ViewComponent extends BaseComponent {\n    constructor(route, viewCache, queryService) {\n      super();\n      this.route = route;\n      this.viewCache = viewCache;\n      this.queryService = queryService;\n      this.positionSelector = new FormControl(\"all\");\n      const routeSnapshot = route.snapshot;\n      const address = routeSnapshot.params[\"address\"];\n      this.loadLiquidityActions(address);\n      this.loadOpenPositions(address);\n      this.positionSelector.valueChanges.subscribe(() => {\n        this.viewCache.selected = this.positionSelector.value;\n      });\n    }\n\n    get allOpenPositions() {\n      var _a;\n\n      return (_a = this.viewCache.allOpenPositions) !== null && _a !== void 0 ? _a : [];\n    }\n\n    loadLiquidityActions(address) {\n      this.queryService.getLiquidityActions(address).pipe(takeUntil(this.ngUnsubscribe)).subscribe(x => {\n        this.viewCache.allActions = x;\n      }, err => {\n        alert(\"Failed loading data!\");\n      });\n    }\n\n    loadOpenPositions(address) {\n      this.queryService.getOpenLiquidityPositions(address).pipe(takeUntil(this.ngUnsubscribe)).subscribe(x => {\n        this.viewCache.allOpenPositions = x;\n      }, err => {\n        alert(\"Failed loading data!\");\n      });\n    }\n\n  }\n\n  ViewComponent.ɵfac = function ViewComponent_Factory(t) {\n    return new (t || ViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ViewCacheService), i0.ɵɵdirectiveInject(i3.QueryService));\n  };\n\n  ViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewComponent,\n    selectors: [[\"view-root\"]],\n    features: [i0.ɵɵProvidersFeature([ViewCacheService]), i0.ɵɵInheritDefinitionFeature],\n    decls: 15,\n    vars: 3,\n    consts: [[\"autosize\", \"\", 1, \"app-container\"], [\"mode\", \"side\"], [\"drawer\", \"\"], [\"type\", \"button\", \"mat-button\", \"\", 3, \"click\"], [\"appearance\", \"fill\"], [3, \"formControl\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function ViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-drawer-container\", 0)(1, \"mat-drawer\", 1, 2);\n        i0.ɵɵelement(3, \"nav-component\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\")(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ViewComponent_Template_button_click_5_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵtext(6, \" Toggle sidenav \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Selected Position\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-select\", 5)(11, \"mat-option\", 6);\n        i0.ɵɵtext(12, \" All \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, ViewComponent_mat_option_13_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formControl\", ctx.positionSelector);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", \"all\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allOpenPositions);\n      }\n    },\n    directives: [i4.MatDrawerContainer, i4.MatDrawer, i5.NavComponent, i6.MatButton, i7.MatFormField, i7.MatLabel, i8.MatSelect, i9.NgControlStatus, i9.FormControlDirective, i10.MatOption, i11.NgForOf, i1.RouterOutlet],\n    styles: [\".app-container[_ngcontent-%COMP%]{height:100vh}\"]\n  });\n  return ViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}