{"ast":null,"code":"import _asyncToGenerator from \"G:\\\\Farsight\\\\Thorsight\\\\Thorsight\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nlet OverviewPage = class OverviewPage {\n  constructor(queryService) {\n    this.queryService = queryService;\n    this.allActions = [];\n    this.allOpenPositions = [];\n    this.positionSelector = new FormControl(\"all\");\n    this.loadData();\n  }\n\n  get actions() {\n    if (this.positionSelector.value == \"all\") {\n      return this.allActions;\n    }\n\n    return this.allActions.filter(x => x.poolName == this.positionSelector.value);\n  }\n\n  get openPositions() {\n    if (this.positionSelector.value == \"all\") {\n      return this.allOpenPositions;\n    }\n\n    return this.allOpenPositions.filter(x => x.poolName == this.positionSelector.value);\n  }\n\n  get nonRuneAssets() {\n    const list = [];\n    this.openPositions.forEach(x => {\n      const asset = {\n        name: x.poolName,\n        amount: Math.round(100 * x.assetAmount) / 100,\n        value: Math.round(100 * x.valueUSD / 2) / 100\n      };\n      list.push(asset);\n    });\n    return list;\n  }\n\n  get runeAsset() {\n    var totalRune = 0;\n    var totalValue = 0;\n    this.openPositions.forEach(x => {\n      totalRune += x.runeAmount;\n      totalValue += x.valueUSD / 2;\n    });\n    return {\n      name: \"THOR.RUNE\",\n      amount: Math.round(100 * totalRune) / 100,\n      value: Math.round(100 * totalValue) / 100\n    };\n  }\n\n  get totalDeposited() {\n    var totalDeposit = 0;\n    this.actions.filter(x => x.action == \"add_liquidity\").forEach(x => totalDeposit += x.pricePerUnit * x.units);\n    return totalDeposit;\n  }\n\n  get totalWithdrawn() {\n    var totalWithdrawn = 0;\n    this.actions.filter(x => x.action == \"remove_liquidity\").forEach(x => totalWithdrawn += x.pricePerUnit * x.units);\n    return totalWithdrawn;\n  }\n\n  get totalCurrent() {\n    var totalCurrent = 0;\n    this.openPositions.forEach(x => totalCurrent += x.valueUSD);\n    return totalCurrent;\n  }\n\n  loadData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.queryService.getLiquidityActions(\"thor19td8caxpsnmc9qrh8lvlvp985886kunuw24det\").subscribe(x => {\n        _this.allActions = x;\n      });\n\n      _this.queryService.getOpenLiquidityPositions(\"thor19td8caxpsnmc9qrh8lvlvp985886kunuw24det\").subscribe(x => {\n        _this.allOpenPositions = x;\n      });\n    })();\n  }\n\n  getAssetColor(asset) {\n    switch (asset) {\n      case \"THOR.RUNE\":\n        return \"#12DEDA\";\n    }\n\n    if (asset.startsWith(\"BTC.\")) {\n      return \"#DEA154\";\n    }\n\n    if (asset.startsWith(\"ETH.\")) {\n      return \"#DEA154\";\n    }\n\n    if (asset.startsWith(\"BNB.\")) {\n      return \"#DEA154\";\n    }\n\n    if (asset.startsWith(\"LTC.\")) {\n      return \"#5F93CE\";\n    }\n\n    if (asset.startsWith(\"BCH.\")) {\n      return \"#8FC473\";\n    }\n\n    if (asset.startsWith(\"DOGE.\")) {\n      return \"#C6A555\";\n    }\n\n    return \"#FFFD5A\";\n  }\n\n};\nOverviewPage = __decorate([Component({\n  selector: 'overview-page',\n  templateUrl: './overview.page.html',\n  styleUrls: ['./overview.page.scss']\n})], OverviewPage);\nexport { OverviewPage };","map":{"version":3,"sources":["G:/Farsight/Thorsight/Thorsight/ClientApp/src/app/modules/view/pages/overview/overview.page.ts"],"names":["__decorate","Component","FormControl","OverviewPage","constructor","queryService","allActions","allOpenPositions","positionSelector","loadData","actions","value","filter","x","poolName","openPositions","nonRuneAssets","list","forEach","asset","name","amount","Math","round","assetAmount","valueUSD","push","runeAsset","totalRune","totalValue","runeAmount","totalDeposited","totalDeposit","action","pricePerUnit","units","totalWithdrawn","totalCurrent","getLiquidityActions","subscribe","getOpenLiquidityPositions","getAssetColor","startsWith","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nlet OverviewPage = class OverviewPage {\r\n    constructor(queryService) {\r\n        this.queryService = queryService;\r\n        this.allActions = [];\r\n        this.allOpenPositions = [];\r\n        this.positionSelector = new FormControl(\"all\");\r\n        this.loadData();\r\n    }\r\n    get actions() {\r\n        if (this.positionSelector.value == \"all\") {\r\n            return this.allActions;\r\n        }\r\n        return this.allActions.filter(x => x.poolName == this.positionSelector.value);\r\n    }\r\n    get openPositions() {\r\n        if (this.positionSelector.value == \"all\") {\r\n            return this.allOpenPositions;\r\n        }\r\n        return this.allOpenPositions.filter(x => x.poolName == this.positionSelector.value);\r\n    }\r\n    get nonRuneAssets() {\r\n        const list = [];\r\n        this.openPositions.forEach(x => {\r\n            const asset = {\r\n                name: x.poolName,\r\n                amount: Math.round(100 * x.assetAmount) / 100,\r\n                value: Math.round(100 * x.valueUSD / 2) / 100\r\n            };\r\n            list.push(asset);\r\n        });\r\n        return list;\r\n    }\r\n    get runeAsset() {\r\n        var totalRune = 0;\r\n        var totalValue = 0;\r\n        this.openPositions.forEach(x => {\r\n            totalRune += x.runeAmount;\r\n            totalValue += x.valueUSD / 2;\r\n        });\r\n        return { name: \"THOR.RUNE\", amount: Math.round(100 * totalRune) / 100, value: Math.round(100 * totalValue) / 100 };\r\n    }\r\n    get totalDeposited() {\r\n        var totalDeposit = 0;\r\n        this.actions.filter(x => x.action == \"add_liquidity\").forEach(x => totalDeposit += x.pricePerUnit * x.units);\r\n        return totalDeposit;\r\n    }\r\n    get totalWithdrawn() {\r\n        var totalWithdrawn = 0;\r\n        this.actions.filter(x => x.action == \"remove_liquidity\").forEach(x => totalWithdrawn += x.pricePerUnit * x.units);\r\n        return totalWithdrawn;\r\n    }\r\n    get totalCurrent() {\r\n        var totalCurrent = 0;\r\n        this.openPositions.forEach(x => totalCurrent += x.valueUSD);\r\n        return totalCurrent;\r\n    }\r\n    async loadData() {\r\n        this.queryService.getLiquidityActions(\"thor19td8caxpsnmc9qrh8lvlvp985886kunuw24det\")\r\n            .subscribe(x => {\r\n            this.allActions = x;\r\n        });\r\n        this.queryService.getOpenLiquidityPositions(\"thor19td8caxpsnmc9qrh8lvlvp985886kunuw24det\")\r\n            .subscribe(x => {\r\n            this.allOpenPositions = x;\r\n        });\r\n    }\r\n    getAssetColor(asset) {\r\n        switch (asset) {\r\n            case \"THOR.RUNE\":\r\n                return \"#12DEDA\";\r\n        }\r\n        if (asset.startsWith(\"BTC.\")) {\r\n            return \"#DEA154\";\r\n        }\r\n        if (asset.startsWith(\"ETH.\")) {\r\n            return \"#DEA154\";\r\n        }\r\n        if (asset.startsWith(\"BNB.\")) {\r\n            return \"#DEA154\";\r\n        }\r\n        if (asset.startsWith(\"LTC.\")) {\r\n            return \"#5F93CE\";\r\n        }\r\n        if (asset.startsWith(\"BCH.\")) {\r\n            return \"#8FC473\";\r\n        }\r\n        if (asset.startsWith(\"DOGE.\")) {\r\n            return \"#C6A555\";\r\n        }\r\n        return \"#FFFD5A\";\r\n    }\r\n};\r\nOverviewPage = __decorate([\r\n    Component({\r\n        selector: 'overview-page',\r\n        templateUrl: './overview.page.html',\r\n        styleUrls: ['./overview.page.scss']\r\n    })\r\n], OverviewPage);\r\nexport { OverviewPage };\r\n"]},"metadata":{},"sourceType":"module"}