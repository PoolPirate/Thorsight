{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/view-cache.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction OverviewPage_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const asset_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMapInterpolate1(\"background-color: \", ctx_r0.getAssetColor(asset_r1.name), \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", asset_r1.amount, \" \", asset_r1.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", asset_r1.value, \"$\");\n  }\n}\n\nexport let OverviewPage = /*#__PURE__*/(() => {\n  class OverviewPage {\n    constructor(viewCache) {\n      this.viewCache = viewCache;\n    }\n\n    get actions() {\n      var _a;\n\n      return (_a = this.viewCache.actions) !== null && _a !== void 0 ? _a : [];\n    }\n\n    get openPositions() {\n      var _a;\n\n      return (_a = this.viewCache.openPositions) !== null && _a !== void 0 ? _a : [];\n    }\n\n    get nonRuneAssets() {\n      const list = [];\n      this.openPositions.forEach(x => {\n        const asset = {\n          name: x.poolName,\n          amount: Math.round(100 * x.assetAmount) / 100,\n          value: Math.round(100 * x.valueUSD / 2) / 100\n        };\n        list.push(asset);\n      });\n      return list;\n    }\n\n    get runeAsset() {\n      var totalRune = 0;\n      var totalValue = 0;\n      this.openPositions.forEach(x => {\n        totalRune += x.runeAmount;\n        totalValue += x.valueUSD / 2;\n      });\n      return {\n        name: \"THOR.RUNE\",\n        amount: Math.round(100 * totalRune) / 100,\n        value: Math.round(100 * totalValue) / 100\n      };\n    }\n\n    get totalDeposited() {\n      var totalDeposit = 0;\n      this.actions.filter(x => x.action == \"add_liquidity\").forEach(x => totalDeposit += x.pricePerUnit * x.units);\n      return Math.round(100 * totalDeposit) / 100;\n    }\n\n    get totalWithdrawn() {\n      var totalWithdrawn = 0;\n      this.actions.filter(x => x.action == \"remove_liquidity\").forEach(x => totalWithdrawn += x.pricePerUnit * x.units);\n      return Math.round(100 * totalWithdrawn) / 100;\n    }\n\n    get totalCurrent() {\n      var totalCurrent = 0;\n      this.openPositions.forEach(x => totalCurrent += x.valueUSD);\n      return Math.round(100 * totalCurrent) / 100;\n    }\n\n    get totalGainLoss() {\n      return Math.round(100 * (this.totalWithdrawn + this.totalCurrent - this.totalDeposited)) / 100;\n    }\n\n    getAssetColor(asset) {\n      switch (asset) {\n        case \"THOR.RUNE\":\n          return \"#12DEDA\";\n      }\n\n      if (asset.startsWith(\"BTC.\")) {\n        return \"#dda356\";\n      }\n\n      if (asset.startsWith(\"ETH.\")) {\n        return \"#9382e1\";\n      }\n\n      if (asset.startsWith(\"BNB.\")) {\n        return \"#bdb357\";\n      }\n\n      if (asset.startsWith(\"LTC.\")) {\n        return \"#5F93CE\";\n      }\n\n      if (asset.startsWith(\"BCH.\")) {\n        return \"#8FC473\";\n      }\n\n      if (asset.startsWith(\"DOGE.\")) {\n        return \"#C6A555\";\n      }\n\n      if (asset.startsWith(\"GAIA.\")) {\n        return \"#2e3148\";\n      }\n\n      return \"#FFFD5A\";\n    }\n\n  }\n\n  OverviewPage.ɵfac = function OverviewPage_Factory(t) {\n    return new (t || OverviewPage)(i0.ɵɵdirectiveInject(i1.ViewCacheService));\n  };\n\n  OverviewPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OverviewPage,\n    selectors: [[\"overview-page\"]],\n    decls: 27,\n    vars: 13,\n    consts: [[1, \"auto-grid\"], [1, \"asset-container\"], [1, \"half-width\"], [\"class\", \"asset\", 3, \"style\", 4, \"ngFor\", \"ngForOf\"], [1, \"half-width\", \"flex\"], [1, \"asset\"], [1, \"statbox\"]],\n    template: function OverviewPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtemplate(3, OverviewPage_div_3_Template, 5, 6, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"h3\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(10, \"div\", 0)(11, \"div\", 6)(12, \"h3\");\n        i0.ɵɵtext(13, \"Total Deposited\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"h3\");\n        i0.ɵɵtext(17, \"Total Withdrawn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 6)(20, \"h3\");\n        i0.ɵɵtext(21, \"Current Value\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 6)(24, \"h3\");\n        i0.ɵɵtext(25, \"Total Gain / Loss\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"flex\", ctx.nonRuneAssets.length == 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.nonRuneAssets);\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMapInterpolate1(\"background-color: \", ctx.getAssetColor(ctx.runeAsset.name), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.runeAsset.amount, \" \", ctx.runeAsset.name, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.runeAsset.value, \"$\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalDeposited, \" USD \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalWithdrawn, \" USD \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalCurrent, \" USD \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.totalGainLoss, \" USD \");\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\".auto-grid[_ngcontent-%COMP%]{padding:20px;display:grid;grid-gap:20px;grid-template-columns:repeat(auto-fit,minmax(300px,1fr))}.stat-container[_ngcontent-%COMP%]{padding:20px}.statbox[_ngcontent-%COMP%]{border-radius:10px;border:2px solid #A79F9F;margin:15px 15px 0;padding:10px}.asset-container[_ngcontent-%COMP%]{border-radius:10px;border:2px solid #A79F9F;margin:15px;display:inline-flex;justify-content:space-between}.asset[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex-direction:column;border-radius:8px;padding:10px;text-align:center;margin:0;color:#000;font-weight:700;width:100%}.asset[_ngcontent-%COMP%]   *[_ngcontent-%COMP%]{color:#000;font-weight:700;margin:0}.half-width[_ngcontent-%COMP%]{width:50%}.flex[_ngcontent-%COMP%]{display:flex}\"]\n  });\n  return OverviewPage;\n})();","map":null,"metadata":{},"sourceType":"module"}