{"ast":null,"code":"import _asyncToGenerator from \"G:\\\\Farsight\\\\Thorsight\\\\Thorsight\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@flipsidecrypto/sdk\";\nimport * as i2 from \"@angular/common\";\n\nfunction HomePage_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const action_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate5(\" \", action_r2.block_timestamp, \" \", action_r2.lp_action, \" \", action_r2.pool_name, \" \", action_r2.price_per_unit, \" (\", action_r2.units * action_r2.price_per_unit, \"$)\\n\");\n  }\n}\n\nfunction HomePage_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const position_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", position_r3.key, \" \", position_r3.val, \" (\", position_r3.val * ((tmp_0_0 = ctx_r1.currentUnitPrices.get(position_r3.key)) !== null && tmp_0_0 !== undefined ? tmp_0_0 : 0), \"$)\\n\");\n  }\n}\n\nexport class HomePage {\n  constructor(flipside) {\n    this.flipside = flipside;\n    this.actions = [];\n    this.openPositions = [];\n    this.currentUnitPrices = new Map();\n    this.getActions(\"thor19td8caxpsnmc9qrh8lvlvp985886kunuw24det\");\n  }\n\n  getActions(address) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const sql = \"SELECT block_timestamp, lp_action, pool_name, (rune_amount_usd + asset_amount_usd) / stake_units AS price_per_unit, stake_units AS units FROM flipside_prod_db.thorchain.liquidity_actions WHERE from_address = '\" + address + \"'\";\n      const query = {\n        sql: sql,\n        ttlMinutes: 10,\n        pageNumber: 0,\n        pageSize: 100\n      };\n      var result = yield _this.flipside.query.run(query);\n      console.log(result.records);\n      _this.actions = result.records.sort((a, b) => {\n        if (a.block_timestamp > b.block_timestamp) {\n          return 1;\n        }\n\n        if (a.block_timestamp == b.block_timestamp) {\n          return 0;\n        }\n\n        return -1;\n      });\n      console.log(result.records);\n      const remaining = new Map();\n\n      _this.actions.forEach(x => {\n        var _a;\n\n        const currentValue = (_a = remaining.get(x.pool_name)) !== null && _a !== void 0 ? _a : 0;\n\n        if (x.lp_action = 'add_liquidity') {\n          remaining.set(x.pool_name, currentValue + x.units);\n        } else {\n          remaining.set(x.pool_name, currentValue - x.units);\n        }\n      });\n\n      remaining.forEach((val, key) => {\n        if (val > 0) {\n          _this.openPositions.push({\n            key: key,\n            val: val\n          });\n        }\n      });\n      const unitSQL = \"WITH last_liquidity_tx AS (SELECT * FROM flipside_prod_db.thorchain.liquidity_actions WHERE asset_amount_usd + rune_amount_usd > 100 AND block_timestamp > CURRENT_DATE - 7 QUALIFY ROW_NUMBER() OVER(PARTITION BY pool_name ORDER BY block_timestamp DESC) < 100) SELECT pool_name, avg((asset_amount_usd + rune_amount_usd) / stake_units) AS unit_price FROM last_liquidity_tx GROUP BY pool_name\";\n      const unitQuery = {\n        sql: unitSQL,\n        ttlMinutes: 10,\n        pageNumber: 0,\n        pageSize: 100\n      };\n      const unitPrices = yield (yield _this.flipside.query.run(unitQuery)).records;\n      unitPrices.forEach(x => {\n        _this.currentUnitPrices.set(x.pool_name, x.unit_price);\n      });\n    })();\n  }\n\n}\n\nHomePage.ɵfac = function HomePage_Factory(t) {\n  return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.Flipside));\n};\n\nHomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomePage,\n  selectors: [[\"home-page\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function HomePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Empty\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Liquidity Events\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, HomePage_div_4_Template, 2, 5, \"div\", 0);\n      i0.ɵɵelement(5, \"hr\");\n      i0.ɵɵelementStart(6, \"h2\");\n      i0.ɵɵtext(7, \"Open Positions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(8, HomePage_div_8_Template, 2, 3, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.actions);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.openPositions);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLnBhZ2Uuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["G:/Farsight/Thorsight/Thorsight/ClientApp/src/app/core/pages/home/home.page.ts"],"names":["i0","i1","i2","HomePage_div_4_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","action_r2","$implicit","ɵɵadvance","ɵɵtextInterpolate5","block_timestamp","lp_action","pool_name","price_per_unit","units","HomePage_div_8_Template","position_r3","ctx_r1","ɵɵnextContext","tmp_0_0","ɵɵtextInterpolate3","key","val","currentUnitPrices","get","undefined","HomePage","constructor","flipside","actions","openPositions","Map","getActions","address","sql","query","ttlMinutes","pageNumber","pageSize","result","run","console","log","records","sort","a","b","remaining","forEach","x","_a","currentValue","set","push","unitSQL","unitQuery","unitPrices","unit_price","ɵfac","HomePage_Factory","t","ɵɵdirectiveInject","Flipside","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","HomePage_Template","ɵɵtemplate","ɵɵelement","ɵɵproperty","directives","NgForOf","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@flipsidecrypto/sdk\";\r\nimport * as i2 from \"@angular/common\";\r\nfunction HomePage_div_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const action_r2 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate5(\" \", action_r2.block_timestamp, \" \", action_r2.lp_action, \" \", action_r2.pool_name, \" \", action_r2.price_per_unit, \" (\", action_r2.units * action_r2.price_per_unit, \"$)\\n\");\r\n} }\r\nfunction HomePage_div_8_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const position_r3 = ctx.$implicit;\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    let tmp_0_0;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate3(\" \", position_r3.key, \" \", position_r3.val, \" (\", position_r3.val * ((tmp_0_0 = ctx_r1.currentUnitPrices.get(position_r3.key)) !== null && tmp_0_0 !== undefined ? tmp_0_0 : 0), \"$)\\n\");\r\n} }\r\nexport class HomePage {\r\n    constructor(flipside) {\r\n        this.flipside = flipside;\r\n        this.actions = [];\r\n        this.openPositions = [];\r\n        this.currentUnitPrices = new Map();\r\n        this.getActions(\"thor19td8caxpsnmc9qrh8lvlvp985886kunuw24det\");\r\n    }\r\n    async getActions(address) {\r\n        const sql = \"SELECT block_timestamp, lp_action, pool_name, (rune_amount_usd + asset_amount_usd) / stake_units AS price_per_unit, stake_units AS units FROM flipside_prod_db.thorchain.liquidity_actions WHERE from_address = '\" + address + \"'\";\r\n        const query = {\r\n            sql: sql,\r\n            ttlMinutes: 10,\r\n            pageNumber: 0,\r\n            pageSize: 100\r\n        };\r\n        var result = await this.flipside.query.run(query);\r\n        console.log(result.records);\r\n        this.actions = result.records.sort((a, b) => {\r\n            if (a.block_timestamp > b.block_timestamp) {\r\n                return 1;\r\n            }\r\n            if (a.block_timestamp == b.block_timestamp) {\r\n                return 0;\r\n            }\r\n            return -1;\r\n        });\r\n        console.log(result.records);\r\n        const remaining = new Map();\r\n        this.actions.forEach(x => {\r\n            var _a;\r\n            const currentValue = (_a = remaining.get(x.pool_name)) !== null && _a !== void 0 ? _a : 0;\r\n            if (x.lp_action = 'add_liquidity') {\r\n                remaining.set(x.pool_name, currentValue + x.units);\r\n            }\r\n            else {\r\n                remaining.set(x.pool_name, currentValue - x.units);\r\n            }\r\n        });\r\n        remaining.forEach((val, key) => {\r\n            if (val > 0) {\r\n                this.openPositions.push({ key: key, val: val });\r\n            }\r\n        });\r\n        const unitSQL = \"WITH last_liquidity_tx AS (SELECT * FROM flipside_prod_db.thorchain.liquidity_actions WHERE asset_amount_usd + rune_amount_usd > 100 AND block_timestamp > CURRENT_DATE - 7 QUALIFY ROW_NUMBER() OVER(PARTITION BY pool_name ORDER BY block_timestamp DESC) < 100) SELECT pool_name, avg((asset_amount_usd + rune_amount_usd) / stake_units) AS unit_price FROM last_liquidity_tx GROUP BY pool_name\";\r\n        const unitQuery = {\r\n            sql: unitSQL,\r\n            ttlMinutes: 10,\r\n            pageNumber: 0,\r\n            pageSize: 100\r\n        };\r\n        const unitPrices = await (await this.flipside.query.run(unitQuery)).records;\r\n        unitPrices.forEach(x => {\r\n            this.currentUnitPrices.set(x.pool_name, x.unit_price);\r\n        });\r\n    }\r\n}\r\nHomePage.ɵfac = function HomePage_Factory(t) { return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.Flipside)); };\r\nHomePage.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: HomePage, selectors: [[\"home-page\"]], decls: 9, vars: 2, consts: [[4, \"ngFor\", \"ngForOf\"]], template: function HomePage_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"h1\");\r\n        i0.ɵɵtext(1, \"Empty\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(2, \"h2\");\r\n        i0.ɵɵtext(3, \"Liquidity Events\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(4, HomePage_div_4_Template, 2, 5, \"div\", 0);\r\n        i0.ɵɵelement(5, \"hr\");\r\n        i0.ɵɵelementStart(6, \"h2\");\r\n        i0.ɵɵtext(7, \"Open Positions\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(8, HomePage_div_8_Template, 2, 3, \"div\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.actions);\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.openPositions);\r\n    } }, directives: [i2.NgForOf], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJob21lLnBhZ2Uuc2NzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}