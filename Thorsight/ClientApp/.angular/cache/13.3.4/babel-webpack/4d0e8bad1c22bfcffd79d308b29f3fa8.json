{"ast":null,"code":"import _asyncToGenerator from \"G:\\\\Farsight\\\\Thorsight\\\\Thorsight\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { timeout } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QueryService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = \"http://localhost:4565/Api/\";\n  }\n\n  getLiquidityActions(address) {\n    return this.httpClient.get(this.apiUrl + \"LiquidityActions/\" + address).pipe(timeout(2000));\n  }\n\n  getOpenLiquidityPositions(address) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.httpClient.get(_this.apiUrl + \"LiquidityPositions/\" + address).pipe(timeout(2000));\n    })();\n  }\n\n}\n\nQueryService.ɵfac = function QueryService_Factory(t) {\n  return new (t || QueryService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nQueryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: QueryService,\n  factory: QueryService.ɵfac\n});","map":{"version":3,"sources":["G:/Farsight/Thorsight/Thorsight/ClientApp/src/app/core/services/queryservice.ts"],"names":["timeout","i0","i1","QueryService","constructor","httpClient","apiUrl","getLiquidityActions","address","get","pipe","getOpenLiquidityPositions","ɵfac","QueryService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,UAAD,EAAa;AACpB,SAAKA,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAc,4BAAd;AACH;;AACDC,EAAAA,mBAAmB,CAACC,OAAD,EAAU;AACzB,WAAO,KAAKH,UAAL,CAAgBI,GAAhB,CAAoB,KAAKH,MAAL,GAAc,mBAAd,GAAoCE,OAAxD,EACFE,IADE,CACGV,OAAO,CAAC,IAAD,CADV,CAAP;AAEH;;AACKW,EAAAA,yBAAyB,CAACH,OAAD,EAAU;AAAA;;AAAA;AACrC,aAAO,KAAI,CAACH,UAAL,CAAgBI,GAAhB,CAAoB,KAAI,CAACH,MAAL,GAAc,qBAAd,GAAsCE,OAA1D,EACFE,IADE,CACGV,OAAO,CAAC,IAAD,CADV,CAAP;AADqC;AAGxC;;AAZqB;;AAc1BG,YAAY,CAACS,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIX,YAAV,EAAwBF,EAAE,CAACc,QAAH,CAAYb,EAAE,CAACc,UAAf,CAAxB,CAAP;AAA6D,CAApH;;AACAb,YAAY,CAACc,KAAb,GAAqB,aAAchB,EAAE,CAACiB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEhB,YAAT;AAAuBiB,EAAAA,OAAO,EAAEjB,YAAY,CAACS;AAA7C,CAAtB,CAAnC","sourcesContent":["import { timeout } from \"rxjs\";\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class QueryService {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n        this.apiUrl = \"http://localhost:4565/Api/\";\r\n    }\r\n    getLiquidityActions(address) {\r\n        return this.httpClient.get(this.apiUrl + \"LiquidityActions/\" + address)\r\n            .pipe(timeout(2000));\r\n    }\r\n    async getOpenLiquidityPositions(address) {\r\n        return this.httpClient.get(this.apiUrl + \"LiquidityPositions/\" + address)\r\n            .pipe(timeout(2000));\r\n    }\r\n}\r\nQueryService.ɵfac = function QueryService_Factory(t) { return new (t || QueryService)(i0.ɵɵinject(i1.HttpClient)); };\r\nQueryService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: QueryService, factory: QueryService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}